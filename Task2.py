import random


class Storm:
    '''
        Класс Storm (Шторм)
            Данный класс включает в себя только один метод:
                *   __str__ - метод по отображению информации для пользователя
    '''
    def __str__(self):
        return f'Вы соединили Воду и Воздух и получили Шторм'


class Steam:
    '''
        Класс Steam (Пар)
            Данный класс включает в себя только один метод:
                *   __str__ - метод по отображению информации для пользователя
    '''
    def __str__(self):
        return f'Вы соединили Воду и Огонь и получили Пар'


class Mud:
    '''
        Класс Mud (Грязь)
            Данный класс включает в себя только один метод:
                *   __str__ - метод по отображению информации для пользователя
    '''
    def __str__(self):
        return f'Вы соединили Воду и Землю и получили Грязь'


class Lightning:
    '''
        Класс Lightning (Молния)
            Данный класс включает в себя только один метод:
                *   __str__ - метод по отображению информации для пользователя
    '''
    def __str__(self):
        return f'Вы соединили Воздух и Огонь и получили Молнию'


class Dirt:
    '''
        Класс Dirt (Пыль)
            Данный класс включает в себя только один метод:
                *   __str__ - метод по отображению информации для пользователя
    '''
    def __str__(self):
        return f'Вы соединили Воздух и Землю и получили Пыль'


class Lava:
    '''
        Класс Lava (Лава)
            Данный класс включает в себя только один метод:
                *   __str__ - метод по отображению информации для пользователя
    '''
    def __str__(self):
        return f'Вы соединили Огонь и Землю и получили Лаву'

class Water:
    '''
        Класс Water (Вода)
            Данный класс включает в себя только один метод:
                *   __add__ - магический метод в котором мы сами задаем алгоритм для операции сложения.
                              Также в данном методе мы используем проверку объекта, который мы передаем,
                              относится ли он к определенным типу или нет, если относится, то вызывается определенный
                              класс для дальнейшей работы.
    '''
    def __add__(self, other):
        if isinstance(other, Air):
            return Storm()
        elif isinstance(other, Fire):
            return Steam()
        elif isinstance(other, Earth):
            return Mud()


class Air:
    '''
        Класс Air (Воздух)
            Данный класс включает в себя только один метод:
                *   __add__ - магический метод в котором мы сами задаем алгоритм для операции сложения.
                              Также в данном методе мы используем проверку объекта, который мы передаем,
                              относится ли он к определенным типу или нет, если относится, то вызывается определенный
                              класс для дальнейшей работы.
    '''
    def __add__(self, other):

        if isinstance(other, Fire):
            return Lightning()
        elif isinstance(other, Earth):
            return Dirt()
        elif isinstance(other, Water):
            return Storm()


class Fire:
    '''
        Класс Fire (Огонь)
            Данный класс включает в себя только один метод:
                *   __add__ - магический метод в котором мы сами задаем алгоритм для операции сложения.
                              Также в данном методе мы используем проверку объекта, который мы передаем,
                              относится ли он к определенным типу или нет, если относится, то вызывается определенный
                              класс для дальнейшей работы.
    '''
    def __add__(self, other):

        if isinstance(other, Water):
            return Steam()
        elif isinstance(other, Air):
            return Lightning()
        elif isinstance(other, Earth):
            return Lava()


class Earth:
    '''
        Класс Earth (Земля)
            Данный класс включает в себя только один метод:
                *   __add__ - магический метод в котором мы сами задаем алгоритм для операции сложения.
                              Также в данном методе мы используем проверку объекта, который мы передаем,
                              относится ли он к определенным типу или нет, если относится, то вызывается определенный
                              класс для дальнейшей работы.
    '''
    def __add__(self, other):

        if isinstance(other, Water):
            return Mud()
        elif isinstance(other, Air):
            return Dirt()
        elif isinstance(other, Fire):
            return Lava()

class Task2:
    '''
        Класс Task2 - класс для управления работой самой программы. Имеет одну константу - COUNT_END (счетчик окончания
                      соединения элементов между собой) Содержит всего 1 метод:
            *   def main - основной метод программы, в нем происходит процесс работы и управления программой. В нем
                           хранится алгоритм по получению 1-ого и 2-ого элементов, дальнейшее их соединение и возврат
                           полученного результата на экран.
    '''
    COUNT_END = 15

    def main(self):

        elements = [Water(), Fire(), Earth(), Air()]

        count = 0

        # Цикл для получения элементов, дальнейшее их соединение между собой и вывод на экран
        while count < Task2.COUNT_END:
            first_elements = random.choice(elements)
            second_elements = random.choice(elements)

            result = first_elements + second_elements

            if result is None:
                continue

            count += 1

            print(result)
            print()


if __name__ == '__main__':
    start_code = Task2()
    start_code.main()
